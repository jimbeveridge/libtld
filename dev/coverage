#!/bin/sh

### This script helps me run the tests in coverage mode which means that the
### library coverage can be generated.

set -e
start_date=`date`
SOURCE=`pwd`
VERSION=`dpkg-parsechangelog --show-field Version | sed -e 's/~.*//' -e 's/\(^[0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/'`
mkdir -p tmp/coverage
rm -rf tmp/coverage/*
cd tmp/coverage
mkdir BUILD
cd BUILD
# request coverage in this build
modules=`cd ../../../../../; pwd`/cmake/Modules
cmake -DCMAKE_MODULE_PATH:PATH="$modules" \
      -DSnapCMakeModules_DIR:PATH="$modules" \
      -DSnapDoxygen_DIR:PATH="$modules" \
      -DCMAKE_BUILD_TYPE=Debug \
      -Dtld_library_COVERAGE:BOOL=ON \
          ../../..
cd ..
echo
echo "***"
echo "*** compile v$VERSION"
echo "***"
VERBOSE=1 make -C BUILD
echo
echo "***"
echo "*** run v$VERSION"
echo "***"
BUILD/tests/tld_internal_test
BUILD/tests/tld_test
BUILD/tests/tld_test_emails
BUILD/tests/tld_test_full_uri
(cd ../../tests/; ./tld_test_godaddy.sh ../tmp/coverage/BUILD/src)
../../tests/tld_test_godaddy.sh
BUILD/tests/tld_test_object
cp ../../tests/public_suffix_list.dat .
BUILD/tests/tld_test_tld_names
BUILD/tests/tld_test_domain_lowercase
BUILD/tests/tld_test_versions $SOURCE
(cd ../../tests; ./tld_test_xml.sh)
if BUILD/src/tld_parser
then
    echo "tld_parser without a path did not generate an error";
    exit 1;
fi
if BUILD/src/tld_parser -h
then
    echo "tld_parser -h did not exit with an error";
    exit 1;
fi
if BUILD/src/tld_parser --help
then
    echo "tld_parser --help did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld -h
then
    echo "validate_tld -h did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld --help
then
    echo "validate_tld --help did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld -l
then
    echo "validate_tld -l did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld --list
then
    echo "validate_tld --list did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld -v --version
then
    echo "validate_tld --list did not exit with an error";
    exit 1;
fi
if ! BUILD/src/validate_tld http://www.m2osw.com/validate/tld?perfect=work
then
    echo "validate_tld <invalid URI> did exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld http://www.m2osw.comm/validate/tld?perfect=work
then
    echo "validate_tld <invalid URI> did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld --schemes ftp http://www.m2osw.com/bad/scheme
then
    echo "validate_tld <valid URI> did not exit with an error";
    exit 1;
fi
if ! BUILD/src/validate_tld --schemes ftp ftp://www.m2osw.com/matching/scheme
then
    echo "validate_tld <invalid URI> did exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld 'mailto:"alexis@m2osw.com'
then
    echo "validate_tld <invalid URI> did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld 'mailto:"alexis@m2osw.com'
then
    echo "validate_tld <invalid URI> did not exit with an error";
    exit 1;
fi
if ! BUILD/src/validate_tld mailto:alexis@m2osw.com
then
    echo "validate_tld <valid URI> did exit with an error";
    exit 1;
fi
if ! BUILD/src/validate_tld -v mailto:alexis@m2osw.com
then
    echo "validate_tld <invalid URI> did exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld --verbose
then
    echo "validate_tld <valid URI> did not exit with an error";
    exit 1;
fi
if BUILD/src/validate_tld --schemes
then
    echo "validate_tld <valid URI> did not exit with an error";
    exit 1;
fi
echo
echo "***"
echo "*** gcov/lcov v$VERSION"
echo "***"

# Choose one of the following gcov commands
mkdir -p gcov
cd gcov
gcov -o ../BUILD/src/CMakeFiles/tld.dir/tld_emails.cpp.gcno ../../../src/tld_emails.cpp
cd ..


lcov --capture --no-external --directory BUILD --base-directory $SOURCE --output-file coverage.info
mkdir -p html
genhtml --legend --demangle-cpp --no-branch-coverage --show-details coverage.info --output-directory html



if test -d /usr/clients/www/lcov.snapwebsites.org/public_html/libtld
then
        cp $SOURCE/dev/index.php /usr/clients/www/lcov.snapwebsites.org/public_html/libtld/.
        mkdir -p /usr/clients/www/lcov.snapwebsites.org/public_html/libtld/libtld-$VERSION
        cp -r html/* /usr/clients/www/lcov.snapwebsites.org/public_html/libtld/libtld-$VERSION/.
fi



echo "Process started  on $start_date"
echo "Process finished on `date`"

# vim: ts=4 sw=4 et
